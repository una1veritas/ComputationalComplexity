Basalt:TMSimulator sin$ ./tm w#w.tm 1101#111
Version 12.0419

This is 2 tape machine w/ states !fin, cmp, cp, rew, 
and, for each tape, alphabet is as follows: 
Tape 1 alphabet = {#, 0, 1, _, }, Tape 2 alphabet = {0, 1, _, }, 
---Transition table---
cp 0 _ -> cp (0, R), (0, R) 
cp 1 _ -> cp (1, R), (1, R) 
cp # _ -> rew (#, N), (_, L) 
rew # 0 -> rew (#, N), (0, L) 
rew # 1 -> rew (#, N), (1, L) 
rew # _ -> cmp (#, R), (_, R) 
cmp 0 0 -> cmp (0, R), (0, R) 
cmp 1 1 -> cmp (1, R), (1, R) 
cmp _ _ -> fin (_, N), (_, N) 
---Table end---
Accepting states: fin, 
 Go next step         -> '[return]'
 Continue until halt  -> 'c'
 Exit                 -> 'e'


Step: 0, State: cp
Input tape: 
[1]1 0 1 # 1 1 1 
Working tape:
[_]
>>
c

Step: 1, State: cp
Input tape: 
 1[1]0 1 # 1 1 1 
Working tape:
 1[_]

Step: 2, State: cp
Input tape: 
 1 1[0]1 # 1 1 1 
Working tape:
 1 1[_]

Step: 3, State: cp
Input tape: 
 1 1 0[1]# 1 1 1 
Working tape:
 1 1 0[_]

Step: 4, State: cp
Input tape: 
 1 1 0 1[#]1 1 1 
Working tape:
 1 1 0 1[_]

Step: 5, State: rew
Input tape: 
 1 1 0 1[#]1 1 1 
Working tape:
 1 1 0[1]_ 

Step: 6, State: rew
Input tape: 
 1 1 0 1[#]1 1 1 
Working tape:
 1 1[0]1 _ 

Step: 7, State: rew
Input tape: 
 1 1 0 1[#]1 1 1 
Working tape:
 1[1]0 1 _ 

Step: 8, State: rew
Input tape: 
 1 1 0 1[#]1 1 1 
Working tape:
[1]1 0 1 _ 

Step: 9, State: rew
Input tape: 
 1 1 0 1[#]1 1 1 
Working tape:
[_]1 1 0 1 _ 

Step: 10, State: cmp
Input tape: 
 1 1 0 1 #[1]1 1 
Working tape:
 _[1]1 0 1 _ 

Step: 11, State: cmp
Input tape: 
 1 1 0 1 # 1[1]1 
Working tape:
 _ 1[1]0 1 _ 

Step: 12, State: cmp
Input tape: 
 1 1 0 1 # 1 1[1]
Working tape:
 _ 1 1[0]1 _ 

The Machine has halted at the state 'cmp' and 
rejected input '1101#111'.

